version: '3'

services:
#------------------------------------------------------------------------------------------------------------------------------------
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./volume/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./volume/prometheus/backups:/prometheus/data 
      - prometheus_data:/prometheus  # Persistent data storage
    ports:
      - "9200:9090"
    networks:
      - monitoring
    restart: unless-stopped
#------------------------------------------------------------------------------------------------------------------------------------
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./volume/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./volume/grafana:/var/lib/grafana
      - ./volume/grafana/logs:/var/log/grafana
      - grafana_data:/var/lib/grafana  # Persist Grafana data
    ports:
      - "3100:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus
    restart: unless-stopped
#------------------------------------------------------------------------------------------------------------------------------------
  snmp_exporter:
    image: prom/snmp-exporter
    container_name: snmp_exporter
    ports:
      - "9116:9116"
    volumes:
      - ./volume/snmp_exporter/snmp.yml:/etc/snmp_exporter/snmp.yml
    command:
      - "--config.file=/etc/snmp_exporter/snmp.yml"
    restart: unless-stopped

#------------------------------------------------------------------------------------------------------------------------------------
  portainer:
    image: portainer/portainer-ce:lts
    container_name: portainer
    restart: always
    ports:
      - "8000:8000"
      - "9443:9443"
      - "9000:9000"  # Optional: Legacy support
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
      - ./volume/portainer/certs:/certs  # Custom SSL certs mounted here
    command: >
      --sslcert /certs/portainer.crt
      --sslkey /certs/portainer.key
    networks:
      - monitoring
#------------------------------------------------------------------------------------------------------------------------------------
  nagios: 
    image: ubuntu:24.04
    container_name: nagios
    command: sleep infinity  # Keeps the container running
    volumes:
      - nagios_data:/nagios
    ports:
      - "8002:8080"
    networks:
      - monitoring
    restart: unless-stopped
#------------------------------------------------------------------------------------------------------------------------------------
networks:
  monitoring:
    driver: bridge
#------------------------------------------------------------------------------------------------------------------------------------
volumes:
  prometheus_data:
  grafana_data:
  portainer_data:
  nagios_data:
#------------------------------------------------------------------------------------------------------------------------------------
